apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: webhook-metrics-model
  namespace: argo
spec:
  dependencies:
  - name: metrics-model-dependency
    eventSourceName: webhook-metrics-model
    eventName: webhook-metrics-model
  triggers:
  - template:
      name: webhook-workflow-trigger
      k8s:
        source:
          resource:
            apiVersion: argoproj.io/v1alpha1
            kind: Workflow
            metadata:
              annotations:
                pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
                pipelines.kubeflow.org/pipeline_compilation_time: '2022-05-10T00:01:34.309876'
                pipelines.kubeflow.org/pipeline_spec: '{"description": "report generator",
                  "inputs": [{"name": "project_id"}, {"name": "syntheticdata_path"},
                  {"name": "raw_data_filepath"}, {"name": "gen_id"}, {"name": "metrics_json_filepath"}],
                  "name": "betterdata synthetic pipeline"}'
              labels:
                pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
              name: metrics-workflow-
              namespace: argo
            spec:
              entrypoint: betterdata-synthetic-pipeline-metrics
              onExit: exit-handler
              imagePullSecrets:
              - name: dockercreds
              templates:
              - name: betterdata-synthetic-pipeline-metrics
                inputs:
                  parameters:
                  - name: metrics_json_filepath
                  - name: gen_id
                  - name: raw_data_filepath
                  - name: syntheticdata_path
                  - name: project_id
                  - name: train_id
                  - name: ml_server_ip
                dag:
                  tasks:
                  - name: assets-downloader
                    template: assets-downloader
                    arguments:
                      parameters:
                      - name: metrics_json_filepath
                        value: '{{inputs.parameters.metrics_json_filepath}}'
                      - name: raw_data_filepath
                        value: '{{inputs.parameters.raw_data_filepath}}'
                      - name: syntheticdata_path
                        value: '{{inputs.parameters.syntheticdata_path}}'
                      - name: train_id
                        value: '{{inputs.parameters.train_id}}'
                      - name: project_id
                        value: '{{inputs.parameters.project_id}}'
                      - name: gen_id
                        value: '{{inputs.parameters.gen_id}}'
                  - name: metrics-model
                    template: metrics-model
                    dependencies:
                    - assets-downloader
                    arguments:
                      artifacts:
                      - name: rawdata
                        from: '{{tasks.assets-downloader.outputs.artifacts.rawdata}}'
                      - name: mlconfig
                        from: '{{tasks.assets-downloader.outputs.artifacts.mlconfig}}'
                      - name: syntheticdata
                        from: '{{tasks.assets-downloader.outputs.artifacts.syntheticdata}}'
                      - name: traininfo
                        from: '{{tasks.assets-downloader.outputs.artifacts.traininfo}}'
                      - name: inferenceinfo
                        from: '{{tasks.assets-downloader.outputs.artifacts.inferenceinfo}}'
                  - name: artifacts-uploader
                    template: artifacts-uploader
                    dependencies:
                    - metrics-model
                    arguments:
                      parameters:
                      - name: train_id
                        value: '{{inputs.parameters.train_id}}'
                      - name: project_id
                        value: '{{inputs.parameters.project_id}}'
                      - name: gen_id
                        value: '{{inputs.parameters.gen_id}}'
                      - name: raw_data_filepath
                        value: '{{inputs.parameters.raw_data_filepath}}'
                      artifacts:
                      - name: report
                        from: '{{tasks.metrics-model.outputs.artifacts.report}}'
                      - name: closestvalues1
                        from: '{{tasks.metrics-model.outputs.artifacts.closestvalues1}}'
                      - name: closestvalues2
                        from: '{{tasks.metrics-model.outputs.artifacts.closestvalues2}}'
              - name: assets-downloader
                container:
                  command:
                  - python
                  - main.py
                  - --mode
                  - download
                  - --op
                  - metrics
                  - --project_id
                  - '{{inputs.parameters.project_id}}'
                  - --gen_id
                  - '{{inputs.parameters.gen_id}}'
                  - --train_id
                  - '{{inputs.parameters.train_id}}'
                  - --json_filepath
                  - '{{inputs.parameters.metrics_json_filepath}}'
                  - --raw_data_filepath
                  - '{{inputs.parameters.raw_data_filepath}}'
                  - --syntheticdata_path
                  - '{{inputs.parameters.syntheticdata_path}}'
                  image: localhost:5000/sidecar_v1:232509
                  imagePullPolicy: IfNotPresent
                  env:
                  - name: miniocreds
                    valueFrom:
                      secretKeyRef:
                        name: miniocreds
                        key: creds
                outputs:
                  artifacts:
                  - name: rawdata
                    path: /tmp/train.csv
                    archive:
                      none: {}
                  - name: mlconfig
                    path: /tmp/ml_config.json
                    archive:
                      none: {}
                  - name: syntheticdata
                    path: /tmp/synthetic_data.csv
                    archive:
                      none: {}
                  - name: traininfo
                    path: /tmp/train_info.json
                    archive:
                      none: {}
                  - name: inferenceinfo
                    path: /tmp/inference_info.json
                    archive:
                      none: {}
                inputs:
                  parameters:
                  - name: raw_data_filepath
                  - name: syntheticdata_path
                  - name: metrics_json_filepath
                  - name: train_id
                  - name: project_id
                  - name: gen_id
                metadata:
                  labels:
                    pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
                    pipelines.kubeflow.org/pipeline-sdk-type: kfp
                    pipelines.kubeflow.org/enable_caching: 'true'
              - name: metrics-model
                container:
                  command:
                  - python
                  - main_ml_api.py
                  - --mode
                  - metrics
                  - --synthetic_data_filepath
                  - /tmp/synthetic_data.csv
                  - --raw_data_filepath
                  - /tmp/train.csv
                  - --json_filepath
                  - /tmp/ml_config.json
                  - --train_info_filepath
                  - /tmp/train_info.json
                  - --inference_info_filepath
                  - /tmp/inference_info.json
                  image: localhost:5000/metrics_engine_v2:232509
                  imagePullPolicy: IfNotPresent
                inputs:
                  artifacts:
                  - name: rawdata
                    path: /tmp/train.csv
                  - name: mlconfig
                    path: /tmp/ml_config.json
                  - name: syntheticdata
                    path: /tmp/synthetic_data.csv
                  - name: traininfo
                    path: /tmp/train_info.json
                  - name: inferenceinfo
                    path: /tmp/inference_info.json
                outputs:
                  artifacts:
                  - name: report
                    path: /tmp/Report.pdf
                    archive:
                      none: {}
                  - name: closestvalues1
                    path: /tmp/closest_values1.csv
                    archive:
                      none: {}
                  - name: closestvalues2
                    path: /tmp/closest_values1.csv
                    archive:
                      none: {}
              - name: artifacts-uploader
                container:
                  command:
                  - python
                  - main.py
                  - --mode
                  - upload
                  - --op
                  - metrics
                  - --project_id
                  - '{{inputs.parameters.project_id}}'
                  - --train_id
                  - '{{inputs.parameters.train_id}}'
                  - --gen_id
                  - '{{inputs.parameters.gen_id}}'
                  image: localhost:5000/sidecar_v1:232509
                  imagePullPolicy: IfNotPresent
                  env:
                  - name: miniocreds
                    valueFrom:
                      secretKeyRef:
                        name: miniocreds
                        key: creds
                inputs:
                  parameters:
                  - name: train_id
                  - name: project_id
                  - name: gen_id
                  artifacts:
                  - name: report
                    path: /tmp/Report.pdf
                  - name: closestvalues1
                    path: /tmp/closest_values1.csv
                  - name: closestvalues2
                    path: /tmp/closest_values2.csv
                metadata:
                  labels:
                    pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
                    pipelines.kubeflow.org/pipeline-sdk-type: kfp
                    pipelines.kubeflow.org/enable_caching: 'true'
              - name: exit-handler
                inputs:
                  parameters:
                  - name: train_id
                  - name: project_id
                  - name: gen_id
                  - name: ml_server_ip
                steps:
                - - name: notify-success
                    template: updatemysql-success
                    when: '{{workflow.status}} == Succeeded'
                    arguments:
                      parameters:
                      - name: train_id
                        value: '{{inputs.parameters.train_id}}'
                      - name: project_id
                        value: '{{inputs.parameters.project_id}}'
                      - name: gen_id
                        value: '{{inputs.parameters.gen_id}}'
                      - name: ml_server_ip
                        value: '{{inputs.parameters.ml_server_ip}}'
                  - name: notify-fail
                    template: updatemysql-failure
                    when: '{{workflow.status}} != Succeeded'
                    arguments:
                      parameters:
                      - name: train_id
                        value: '{{inputs.parameters.train_id}}'
                      - name: project_id
                        value: '{{inputs.parameters.project_id}}'
                      - name: gen_id
                        value: '{{inputs.parameters.gen_id}}'
                      - name: ml_server_ip
                        value: '{{inputs.parameters.ml_server_ip}}'
              - name: updatemysql-success
                container:
                  image: localhost:5000/exithandler_v1:232509
                  imagePullPolicy: IfNotPresent
                  command:
                  - python
                  - exithandler.py
                  - --mode
                  - metrics
                  - --project_id
                  - '{{inputs.parameters.project_id}}'
                  - --train_id
                  - '{{inputs.parameters.train_id}}'
                  - --gen_id
                  - '{{inputs.parameters.gen_id}}'
                  - --status
                  - success
                  - --ml_server_ip
                  - '{{inputs.parameters.ml_server_ip}}'
                  env:
                  - name: mysqlcreds
                    valueFrom:
                      secretKeyRef:
                        name: mysqlcreds
                        key: creds
                  - name: miniocreds
                    valueFrom:
                      secretKeyRef:
                        name: miniocreds
                        key: creds
                  - name: backendcreds
                    valueFrom:
                      secretKeyRef:
                        name: backendcreds
                        key: creds
                inputs:
                  parameters:
                  - name: train_id
                  - name: project_id
                  - name: gen_id
                  - name: ml_server_ip
              - name: updatemysql-failure
                container:
                  image: localhost:5000/exithandler_v1:232509
                  imagePullPolicy: IfNotPresent
                  command:
                  - python
                  - exithandler.py
                  - --mode
                  - metrics
                  - --project_id
                  - '{{inputs.parameters.project_id}}'
                  - --train_id
                  - '{{inputs.parameters.train_id}}'
                  - --gen_id
                  - '{{inputs.parameters.gen_id}}'
                  - --status
                  - failed
                  - --ml_server_ip
                  - '{{inputs.parameters.ml_server_ip}}'
                  env:
                  - name: mysqlcreds
                    valueFrom:
                      secretKeyRef:
                        name: mysqlcreds
                        key: creds
                  - name: miniocreds
                    valueFrom:
                      secretKeyRef:
                        name: miniocreds
                        key: creds
                  - name: backendcreds
                    valueFrom:
                      secretKeyRef:
                        name: backendcreds
                        key: creds
                inputs:
                  parameters:
                  - name: train_id
                  - name: project_id
                  - name: gen_id
                  - name: ml_server_ip
              metadata:
                labels:
                  pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
                  pipelines.kubeflow.org/pipeline-sdk-type: kfp
                  pipelines.kubeflow.org/enable_caching: 'true'
              arguments:
                parameters:
                - name: raw_data_filepath
                - name: project_id
                - name: gen_id
                - name: syntheticdata_path
                - name: metrics_json_filepath
                - name: workflow_name
                - name: train_id
                - name: ml_server_ip
        operation: create
        parameters:
        - src:
            dependencyName: metrics-model-dependency
            dataKey: body.raw_data_filepath
          dest: spec.arguments.parameters.0.value
        - src:
            dependencyName: metrics-model-dependency
            dataKey: body.project_id
          dest: spec.arguments.parameters.1.value
        - src:
            dependencyName: metrics-model-dependency
            dataKey: body.gen_id
          dest: spec.arguments.parameters.2.value
        - src:
            dependencyName: metrics-model-dependency
            dataKey: body.syntheticdata_path
          dest: spec.arguments.parameters.3.value
        - src:
            dependencyName: metrics-model-dependency
            dataKey: body.metrics_json_filepath
          dest: spec.arguments.parameters.4.value
        - src:
            dependencyName: metrics-model-dependency
            dataKey: body.workflow_name
          dest: metadata.name
          operation: append
        - src:
            dependencyName: metrics-model-dependency
            dataKey: body.workflow_name
          dest: spec.arguments.parameters.5.value
        - src:
            dependencyName: metrics-model-dependency
            dataKey: body.train_id
          dest: spec.arguments.parameters.6.value
        - src:
            dependencyName: metrics-model-dependency
            dataKey: body.ml_server_ip
          dest: spec.arguments.parameters.7.value
